-- This file  needs to have same structure as nvconfig.lua 
-- https://github.com/NvChad/NvChad/blob/v2.5/lua/nvconfig.lua

-- Load necessary modules
local os = require("os")

-- Function to get current date in a specific format
local function getCurrentDate()
    return os.date("%Y-%m-%d")  -- Format as YYYY-MM-DD
end

---@type ChadrcConfig
local M = {}

M.general = {
  n = {
    ["<C-S-Left>"] = { "<cmd> TmuxNavigateLeft<CR>", "window left" },
    ["<C-S-Right>"] = { "<cmd> TmuxNavigateRight<CR>", "window right" },
    ["<C-S-Down>"] = { "<cmd> TmuxNavigateDown<CR>", "window down" },
    ["<C-S-Up>"] = { "<cmd> TmuxNavigateUp<CR>", "window up" },
  }
}

-- Get Neovim version information
local nvim_version = vim.version()

-- Join major, minor, and patch with "."
local version_str = table.concat({nvim_version.major, nvim_version.minor, nvim_version.patch}, ".")

M.ui = {
  theme = "catppuccin",
  transparency=true,
  nvdash = {
    header = {
      "    ‚†Ä‚†Ä‚†Ä                                 ‚£Ä‚°†‚¢§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†ü‚†É‚†Ä‚†Ä‚†ô‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†æ‚¢õ‚†í‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£∂‚£Ñ‚°à‚†ì‚¢Ñ‚††‚°Ä‚†Ä‚†Ä‚†Ä‚£Ñ‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°ø‚†≥‚°Ü‚†ê‚¢ø‚£Ü‚†à‚¢ø‚†Ä‚†Ä‚°á‚†ò‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£∑‚°á‚†Ä‚†Ä‚†à‚¢Ü‚†à‚†Ü‚¢∏‚†Ä‚†Ä‚¢£‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†à‚¢Ç‚†Ä‚°á‚†Ä‚†Ä‚¢®‚†ì‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£¶‚£§‚†ñ‚°è‚°∏‚†Ä‚£Ä‚°¥‚†ã‚†Ä‚†à‚†¢‚°Ä‚†Ä‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚†Å‚£π‚£ø‚£ø‚£ø‚£∑‚£æ‚†Ω‚†ñ‚†ä‚¢π‚£Ä‚†Ñ‚†Ä‚†Ä‚†Ä‚†à‚¢£‚°Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ü‚£á‚£∞‚¢´‚¢ª‚¢â‚†â‚†Ä‚£ø‚°Ü‚†Ä‚†Ä‚°∏‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢á    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢®‚°á‚°á‚†à‚¢∏‚¢∏‚¢∏‚†Ä‚†Ä‚°á‚°á‚†Ä‚†Ä‚†Å‚†ª‚°Ñ‚°†‚†Ç‚†Ä‚†Ä‚†Ä‚†ò    ",
      "    ‚¢§‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†õ‚†ì‚°á‚†Ä‚†∏‚°Ü‚¢∏‚†Ä‚¢†‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚£µ‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä    ",
      "    ‚†à‚¢ª‚£∑‚£¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°ø‚£¶‚£Ä‚°á‚†Ä‚¢ß‚°á‚†Ä‚†Ä‚¢∫‚°ü‚†Ä‚†Ä‚†Ä‚¢∞‚†â‚£∞‚†ü‚†ä‚£†‚†Ç‚†Ä‚°∏    ",
      "    ‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£∑‚£¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚¢ß‚°ô‚†∫‚†ø‚°á‚†Ä‚†ò‚†á‚†Ä‚†Ä‚¢∏‚£ß‚†Ä‚†Ä‚¢†‚†É‚£æ‚£å‚†â‚†©‚†≠‚†ç‚£â‚°á    ",
      "    ‚†Ä‚†Ä‚†Ä‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£û‚£ã‚†Ä‚†à‚†Ä‚°≥‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°è‚†Ä‚†Ä‚°û‚¢∞‚†â‚†â‚†â‚†â‚†â‚†ì‚¢ª‚†É    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ñ‚†Ä‚†Ä‚¢Ä‚£Ä‚††‚†§‚£§‚£§‚†§‚†û‚†ì‚¢†‚†à‚°Ü‚†Ä‚¢£‚£∏‚£æ‚†Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚°º‚†Å‚°ø‚†à‚£â‚£â‚£í‚°í‚†¢‚°º‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£é‚£Ω‚£∂‚£§‚°∂‚¢ã‚£§‚†É‚£†‚°¶‚¢Ä‚°º‚¢¶‚£æ‚°§‚†ö‚£ü‚£Å‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚£Ä‚£à‚£Ä‚£†‚£æ‚£Ö‚†Ä‚†ë‚†Ç‚†§‚†å‚£©‚°á‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Å‚£∫‚¢Å‚£û‚£â‚°¥‚†ü‚°Ä‚†Ä‚†Ä‚†Ä‚†Å‚†∏‚°Ö‚†Ä‚†à‚¢∑‚†à‚†è‚†ô‚†Ä‚¢π‚°õ‚†Ä‚¢â‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£º‚°á‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ω‚£ø‚°ü‚¢°‚†ñ‚£°‚°¥‚†Ç‚£Ä‚£Ä‚£Ä‚£∞‚£Å‚£Ä‚£Ä‚£∏‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†à‚†Ä‚£†‚†ú‚†ã‚£†‚†Å‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£ø‚£ø‚°ü‚¢ø‚£ø‚£ø‚£∑‚°ü‚¢ã‚£•‚£ñ‚£â‚†Ä‚†à‚¢Å‚°Ä‚†§‚†ö‚†ø‚£∑‚°¶‚¢Ä‚£†‚£Ä‚†¢‚£Ñ‚£Ä‚°†‚†î‚†ã‚†Å‚†Ä‚£º‚†É‚†Ä‚†Ä    ",
      "    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚°Ñ‚†à‚†ª‚£ø‚£ø‚¢ø‚£õ‚£©‚†§‚†í‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†í‚¢§‚°Ä‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ø‚†Ä‚†Ä‚†Ä    ",
    },
    buttons = {
        { "ÔÄÇ  Find File", "<C-p>", "Telescope find_files" },
        { "Û∞àö  Recent Files", "<Spc-f-o>", "Telescope oldfiles" },
        { "Û∞à≠  Find Word", "<C-f>", "Telescope live_grep" },
        { "Óà´  Themes", "<Spc-t-h>", "Telescope themes" },
        { "ÔÑú  Mappings", "<Spc-c-h>", "NvCheatsheet" },
        { "üí§ Lazy", "", "Lazy" },
        { "‚ùå Close", "_", "q!" }
    },
  },
}

-- Insert date dynamically into the middle of the header
local dateStr = getCurrentDate()
local placeholder = "{DatePlhldr}"
local header = M.ui.nvdash.header

-- Find the index where the placeholder is located
local placeholderIndex
for i, line in ipairs(header) do
    if string.find(line, placeholder) then
        placeholderIndex = i
        break
    end
end

-- Replace the placeholder with the date
if placeholderIndex then
    header[placeholderIndex] = string.gsub(header[placeholderIndex], placeholder, dateStr)
end

M.dap_mappings = require "mappings"
M.plugins = "plugins.plugins"

return M
